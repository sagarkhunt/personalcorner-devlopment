import { Col, Row } from "react-bootstrap";
import { useSelector } from "react-redux";
import { fomatNumberToCompact } from "../utils/fomatNumber";

const MarketplaceStatePoints = () => {
  const collectionInfo = useSelector(
    (_state) => _state.collection.collectionInfo
  );

  return (
    <Row>
      <Col className="pointInfo">
        <div className="d-flex col align-items-center">
          <svg
            width="36"
            height="36"
            viewBox="0 0 36 36"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect
              width="35"
              height="35"
              transform="translate(0.88031 0.855469)"
              fill="#9BDAFE"
            />
            <path
              d="M25.1858 17.3843C25.1858 16.801 24.7969 16.4121 24.2136 16.4121H19.3525V8.14822C19.3525 7.85655 19.158 7.66211 18.8664 7.66211C18.6719 7.66211 18.4775 7.75933 18.4775 7.95378L12.6442 18.9399C12.5469 19.0371 12.5469 19.1343 12.5469 19.3288C12.5469 19.9121 12.9358 20.301 13.5192 20.301H18.3803V28.5649C18.3803 28.8566 18.5747 29.051 18.8664 29.051C19.0608 29.051 19.2553 28.9538 19.2553 28.7593L24.9914 17.8704C25.0886 17.676 25.1858 17.5788 25.1858 17.3843Z"
              fill="#1D2529"
            />
          </svg>
          <span className="font22LightBlue ms-2">
            Total XP:{" "}
            {collectionInfo.data
              ? fomatNumberToCompact(collectionInfo.data.Points)
              : "-"}
          </span>
        </div>
        <div className="d-flex col align-items-center mt-4">
          <svg
            width="36"
            height="36"
            viewBox="0 0 36 36"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <rect
              width="35"
              height="35"
              transform="translate(0.880371 0.855469)"
              fill="#F6FE9B"
            />
            <path
              d="M26.2112 24.5559C25.7126 25.2141 25.1043 25.8324 24.3863 26.4108C23.6682 26.9793 22.8505 27.448 21.933 27.8169C21.0155 28.176 20.0133 28.3555 18.9263 28.3555C17.58 28.3555 16.3833 28.1062 15.3362 27.6075C14.299 27.0989 13.4264 26.3909 12.7184 25.4834C12.0103 24.5659 11.4718 23.4938 11.1028 22.2672C10.7338 21.0306 10.5493 19.6893 10.5493 18.2433C10.5493 16.3585 10.8684 14.6731 11.5067 13.1872C12.1549 11.6913 13.0923 10.5145 14.319 9.65689C15.5555 8.78928 17.0664 8.35547 18.8515 8.35547C20.3175 8.35547 21.6737 8.66961 22.9203 9.29788C24.1669 9.92615 25.1342 10.8436 25.8223 12.0503C25.583 12.3096 25.2688 12.6038 24.8799 12.9329C24.491 13.252 24.0921 13.5612 23.6832 13.8603C23.2843 14.1495 22.9402 14.3839 22.651 14.5634C22.6012 14.4437 22.4915 14.2493 22.3219 13.98C22.1624 13.7008 21.933 13.4166 21.6338 13.1273C21.3446 12.8282 20.9707 12.5739 20.5119 12.3644C20.0632 12.155 19.5246 12.0503 18.8964 12.0503C18.3578 12.0503 17.8542 12.18 17.3855 12.4392C16.9268 12.6985 16.5229 13.0825 16.1738 13.5911C15.8348 14.0997 15.5655 14.723 15.3661 15.4609C15.1766 16.1889 15.0819 17.0266 15.0819 17.974C15.0819 18.8217 15.1666 19.6195 15.3362 20.3674C15.5057 21.1154 15.75 21.7736 16.0691 22.342C16.3982 22.9104 16.7971 23.3542 17.2658 23.6733C17.7346 23.9825 18.2631 24.1371 18.8515 24.1371C19.4897 24.1371 20.0781 24.0124 20.6166 23.7631C21.1552 23.5138 21.6438 23.1996 22.0826 22.8207C22.5214 22.4318 22.9103 22.0329 23.2494 21.624C23.5685 21.8334 23.9225 22.1126 24.3115 22.4617C24.7004 22.8007 25.0644 23.1598 25.4035 23.5387C25.7525 23.9077 26.0218 24.2468 26.2112 24.5559Z"
              fill="#1D2529"
            />
          </svg>
          <span className="font22LightYellow ms-2">
            Total PCC:{" "}
            {collectionInfo.data
              ? fomatNumberToCompact(collectionInfo.data.Reward)
              : "-"}
          </span>
        </div>
      </Col>
    </Row>
  );
};

export default MarketplaceStatePoints;
